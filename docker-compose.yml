version: "3.0"
services:

  web:
    build: .
    command: uwsgi --http=0.0.0.0:8000 app.ini
    environment:
      DATABASE_URL: postgres://$POSTGRES_USER:$POSTGRES_PASSWORD@database:5432/$POSTGRES_DB
      QUEUE_URL: redis://queue:6379
      CACHE_DIR: /app/data
    ports:
      - "8000:8000"
    volumes:
      - cache-data:/app/data
    depends_on:
      - database
      - queue

  worker:
    build: .
    command: rq worker -u redis://queue:6379 -w src.tracking.TrackingWorker
    environment:
      DATABASE_URL: postgres://$POSTGRES_USER:$POSTGRES_PASSWORD@database:5432/$POSTGRES_DB
      QUEUE_URL: redis://queue:6379
      CACHE_DIR: /app/data
    volumes:
      - cache-data:/app/data
    depends_on:
      - database
      - queue

  queue:
    image: redis:6.0-alpine
    command: redis-server --appendonly yes
    ports:
      - "8001:6379"
    volumes:
      - queue-data:/data

  database:
    image: postgis/postgis:11-3.0-alpine
    command: postgres -c wal_level=minimal -c max_wal_senders=0 -c archive_mode=off
    environment:
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DB: $POSTGRES_DB
    ports:
      - "8002:5432"
    volumes:
      - $PWD/db/meta-schema.sql:/docker-entrypoint-initdb.d/11-meta-schema.sql
      - $PWD/db/staging-schema.sql:/docker-entrypoint-initdb.d/12-staging-schema.sql
      - $PWD/db/mart-schema.sql:/docker-entrypoint-initdb.d/13-mart-schema.sql
      - $PWD/db/hydrate-mart.sql:/docker-entrypoint-initdb.d/14-hydrate-mart.sql
      - $PWD/db/hydrate-gis.sh:/docker-entrypoint-initdb.d/15-hydrate-gis.sh
      - db-data:/var/lib/postgresql/data

volumes:
  queue-data:
  db-data:
  cache-data:
